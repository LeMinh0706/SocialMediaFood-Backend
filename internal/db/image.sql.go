// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: image.sql

package db

import (
	"context"
)

const createImagePost = `-- name: CreateImagePost :one
INSERT INTO post_image(
    post_id,
    url_image
) VALUES (
    $1, $2
) RETURNING id, url_image, post_id
`

type CreateImagePostParams struct {
	PostID   int64  `json:"post_id"`
	UrlImage string `json:"url_image"`
}

func (q *Queries) CreateImagePost(ctx context.Context, arg CreateImagePostParams) (PostImage, error) {
	row := q.db.QueryRowContext(ctx, createImagePost, arg.PostID, arg.UrlImage)
	var i PostImage
	err := row.Scan(&i.ID, &i.UrlImage, &i.PostID)
	return i, err
}

const getImagePost = `-- name: GetImagePost :one
SELECT id, url_image, post_id FROM post_image
WHERE post_id = $1 AND url_image = $2
LIMIT 1
`

type GetImagePostParams struct {
	PostID   int64  `json:"post_id"`
	UrlImage string `json:"url_image"`
}

func (q *Queries) GetImagePost(ctx context.Context, arg GetImagePostParams) (PostImage, error) {
	row := q.db.QueryRowContext(ctx, getImagePost, arg.PostID, arg.UrlImage)
	var i PostImage
	err := row.Scan(&i.ID, &i.UrlImage, &i.PostID)
	return i, err
}
