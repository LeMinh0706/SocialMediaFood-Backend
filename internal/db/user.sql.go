// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: user.sql

package db

import (
	"context"
	"database/sql"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users(
    email,
    hash_pashword,
    fullname,
    gender,
    role_id,
    date_create_account
) VALUES (
    $1, $2, $3, $4, $5, $6
) RETURNING id, email, hash_pashword, fullname, gender, country, language, url_avatar, role_id, url_background_profile, date_create_account
`

type CreateUserParams struct {
	Email             sql.NullString `json:"email"`
	HashPashword      string         `json:"hash_pashword"`
	Fullname          string         `json:"fullname"`
	Gender            int32          `json:"gender"`
	RoleID            int32          `json:"role_id"`
	DateCreateAccount int64          `json:"date_create_account"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser,
		arg.Email,
		arg.HashPashword,
		arg.Fullname,
		arg.Gender,
		arg.RoleID,
		arg.DateCreateAccount,
	)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.HashPashword,
		&i.Fullname,
		&i.Gender,
		&i.Country,
		&i.Language,
		&i.UrlAvatar,
		&i.RoleID,
		&i.UrlBackgroundProfile,
		&i.DateCreateAccount,
	)
	return i, err
}
