basePath: /api
definitions:
  db.RegisterRequest:
    properties:
      email:
        type: string
      fullname:
        maxLength: 32
        minLength: 6
        type: string
      gender:
        maximum: 1
        minimum: 0
        type: integer
      password:
        minLength: 8
        type: string
      username:
        maxLength: 16
        minLength: 6
        type: string
    required:
    - fullname
    - password
    - username
    type: object
  models.AccountResponse:
    properties:
      address:
        type: string
      country:
        type: string
      fullname:
        type: string
      gender:
        type: integer
      id:
        type: integer
      is_upgrade:
        type: boolean
      language:
        type: string
      lat: {}
      lng: {}
      url_avatar:
        type: string
      url_background_profile:
        type: string
      user_id:
        type: integer
    type: object
  models.LoginRequest:
    properties:
      password:
        example: kocanpass
        type: string
      username:
        example: HiroPhent
        type: string
    type: object
  models.LoginResponse:
    properties:
      access_token:
        type: string
    type: object
  models.RegisterResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      username:
        type: string
    required:
    - username
    type: object
  response.ErrSwaggerJson:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
host: localhost:8070
info:
  contact: {}
  description: This is SocialFood Swagger.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Foodioo Documentations
  version: "1.0"
paths:
  /accounts/me:
    get:
      consumes:
      - application/json
      description: Login to be more handsome
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.AccountResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrSwaggerJson'
      security:
      - BearerAuth: []
      summary: It's you
      tags:
      - accounts
  /users/login:
    post:
      consumes:
      - application/json
      description: Login to be more handsome
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrSwaggerJson'
      summary: Login user
      tags:
      - users
  /users/register:
    post:
      consumes:
      - application/json
      description: Join with us
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/db.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RegisterResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrSwaggerJson'
      summary: Register user
      tags:
      - users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
